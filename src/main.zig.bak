const std = @import("std");

const fs = std.fs;
const print = std.debug.print;

// Implementation:
// Use a buffer of size 2048 bytes
// While reading the contents of the file's stream:
// - Every character is put into the buffer
// - if We run into a \n, we close the buffer and print its contents
// - When we reach the end of the stream, we cleanup the buffer and exit the program

pub fn main() !void {
    const cwd = fs.cwd();

    if (cwd.openFile("input.txt", fs.File.OpenFlags{})) |file| {
        const stat = try file.stat();

        var gpa = std.heap.GeneralPurposeAllocator(.{}){};
        const allocator = gpa.allocator();

        // TODO: Stream the file and parse it line by line, using separator \n
        const contents = try file.reader().readAllAlloc(allocator, stat.size + 1);

        print("{s}", .{contents});

        // Clean up: Close file
        file.close();
    } else |e| {
        print("Error opening file: {!}", .{e});
    }
}
